device: 'cuda'
gpu_index: "0"

random_seed: 42

federation_id: '1.x.y'
# RvQ: What is the meaning of CLusteredFederatedLearning?
# TraditionalFederatedLearning | DecentralizedFederatedLearning | ClusterFederatedLearningSchema
federated_learning_schema: 'TraditionalFederatedLearning'
# The network topology of the federated learning: star, k_connect, ring, custom (given an adjacency matrix)
federated_learning_topology: 'star'
# For k_connect topology 
client_k_neighbors: 3

# train | test | eval | train-test-eval | train-eval | etc.
client_role: 'train' # RvQ: We got clients that only train or only evaluate?

learning_rate: 0.001
model_type: "cnn"
transformer_model_size: "base"
pretrained_models: false
dataset_type: "fmnist"
loss_function: "CrossEntropy"
optimizer: "adam"

data_distribution_kind: "30"
desired_distribution: null
dirichlet_beta: 0.5

distance_metric: "coordinate"
dynamic_sensitivity_percentage: true
sensitivity_percentage: 100
remove_common_ids: false
# RvQ:
fed_avg: false

chunking: false                    # Enable chunking
chunking_with_gradients: false     # CRITICAL: MUST be true when chunking=true for importance analysis
chunking_parts: 100               # Divide model into 50 equal chunks
chunking_random_section: false    # Use importance-based selection (not random)

# FedAvg | FedProx
aggregation_strategy: "FedAvg"
aggregation_sample_scaling: false

distance_metric_on_parameters: true
number_of_epochs: 1
train_batch_size: 28
test_batch_size: 28
transform_input_size: 28
weight_decay: null

number_of_clients: 4
client_sampling_rate: 1.0
pre_computed_data_driven_clustering: false
do_cluster: true
clustering_period: 6
federated_learning_rounds: 6
stop_avg_accuracy: 1.0
save_before_aggregation_models: false
save_global_models: false

mean_accuracy_to_csv: true
use_global_accuracy_for_noniid: true  # Use global accuracy for non-IID evaluation (recommended) 
